-- Max HH:MM to bypass 838:59 limitation of SQL's upper limit for sec_to_time which converts total seconds to time
      SELECT CONCAT(FLOOR((max(ride_mins)*60)/3600),':',FLOOR(((max(ride_mins)*60)%3600)/60))
      FROM gda_schema.table_divvy_year

-- Min HH:MM 
      SELECT sec_to_time(min(ride_mins) * 60) FROM gda_schema.table_divvy_year;

-- Mean HH:MM
      SELECT sec_to_time(avg(ride_mins) * 60) FROM gda_schema.table_divvy_year WHERE rideable_type <> "docked_bike";
      
-- Mode HH:MM
	SELECT count(*), sec_to_time(ride_mins * 60)
	FROM gda_schema.table_divvy_year
	WHERE rideable_type <> "docked_bike"
	GROUP BY ride_mins
	ORDER BY count(*) DESC
	LIMIT 1
	
-- Median HH:MM
	Calculated in PowerBI after failing to get the code to work in MySQL

-- Total Casual Riders and Avg Ride Time
      SELECT count(*), sec_to_time(avg(ride_mins * 60))
      FROM 'gda_schema'.'table_divvy_year'
      WHERE member_casual = 'casual' and rideable_type <> 'docked_bike'

-- Total Member Riders and Avg Ride Time
      SELECT count(*), sec_to_time(avg(ride_mins * 60))
      FROM 'gda_schema'.'table_divvy_year'
      WHERE member_casual = 'member'
      
-- Most and Least Popular Day of Week with Rider Membership Breakdown
      SELECT day_of_week_name,
		member_casual,
        count(*) AS total_rides,
        sec_to_time(avg(ride_mins * 60)) AS days_ride_length
      FROM `gda_schema`.`table_divvy_year`
      WHERE rideable_type <> 'docked_bike'
      GROUP BY day_of_week_name, member_casual
      ORDER BY member_casual, days_ride_length DESC

-- Total Docked Bikes
      SELECT count(*)
      FROM 'gda_schema'.'table_divvy_year'
      WHERE rideable_type = 'docked_bike'

-- Total Electric Bikes
      SELECT count(*)
      FROM 'gda_schema'.'table_divvy_year'
      WHERE rideable_type = 'electric_bike'

-- Total Classic Bikes	
      SELECT count(*)
      FROM 'gda_schema'.'table_divvy_year'
      WHERE rideable_type = 'classic_bike'

-- Most and Least Popular Day of Week
      SELECT day_of_week_name,
        count(*) AS total_rides,
	sec_to_time(avg(ride_mins *60)) AS average_ride_time
      FROM `gda_schema`.`table_divvy_year`
      WHERE rideable_type <> 'docked_bike'
      GROUP BY day_of_week_name
      ORDER BY total_rides DESC

-- Most and Least Popular Start Station
      SELECT start_station_name,
	count(*) AS total_rides_from_start_station
      FROM `gda_schema`.`table_divvy_year`
      GROUP BY start_station_name
      ORDER BY total_rides_from_start_station DESC

-- Most and Least Popular End Station
      SELECT end_station_name,
	count(*) AS total_rides_to_end_station
      FROM `gda_schema`.`table_divvy_year`
      GROUP BY end_station_name
      ORDER BY total_rides_to_end_station DESC

-- Clean up (remove rows that meet certain criteria, (1) Don't forget to go to Edit > Preferences > SQL Editor > Uncheck Safe Updates, (2) Query > Reconnect to Server
	DELETE FROM gda_schema.`202105-divvy-tripdata`
	WHERE ride_id = '3EC1B5A4D4B9AB99'
